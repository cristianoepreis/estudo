package com.ufbra.sistemaescolar.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PlanoEnsinoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanoEnsinoAllPropertiesEquals(PlanoEnsino expected, PlanoEnsino actual) {
        assertPlanoEnsinoAutoGeneratedPropertiesEquals(expected, actual);
        assertPlanoEnsinoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanoEnsinoAllUpdatablePropertiesEquals(PlanoEnsino expected, PlanoEnsino actual) {
        assertPlanoEnsinoUpdatableFieldsEquals(expected, actual);
        assertPlanoEnsinoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanoEnsinoAutoGeneratedPropertiesEquals(PlanoEnsino expected, PlanoEnsino actual) {
        assertThat(expected)
            .as("Verify PlanoEnsino auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanoEnsinoUpdatableFieldsEquals(PlanoEnsino expected, PlanoEnsino actual) {
        assertThat(expected)
            .as("Verify PlanoEnsino relevant properties")
            .satisfies(e -> assertThat(e.getEmenta()).as("check ementa").isEqualTo(actual.getEmenta()))
            .satisfies(e -> assertThat(e.getBibliografiaBasica()).as("check bibliografiaBasica").isEqualTo(actual.getBibliografiaBasica()))
            .satisfies(e ->
                assertThat(e.getBibliografiaComplementar())
                    .as("check bibliografiaComplementar")
                    .isEqualTo(actual.getBibliografiaComplementar())
            )
            .satisfies(e ->
                assertThat(e.getPraticaLaboratorial()).as("check praticaLaboratorial").isEqualTo(actual.getPraticaLaboratorial())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlanoEnsinoUpdatableRelationshipsEquals(PlanoEnsino expected, PlanoEnsino actual) {
        assertThat(expected)
            .as("Verify PlanoEnsino relationships")
            .satisfies(e -> assertThat(e.getDisciplina()).as("check disciplina").isEqualTo(actual.getDisciplina()))
            .satisfies(e ->
                assertThat(e.getProfessorResponsavel()).as("check professorResponsavel").isEqualTo(actual.getProfessorResponsavel())
            );
    }
}
